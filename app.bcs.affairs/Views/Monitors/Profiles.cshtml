@model app.bcs.affairs.Models.vmBand
@{
    ViewData["Title"] = "Profiles";
    ViewData["PageName"] = "monitors_profiles";
    ViewData["Heading"] = "<i class='fal fa-shield-alt'></i> Monitors: <span class='fw-300'>Profiles</span>";
    ViewData["Category1"] = "Monitors";
    ViewData["PageIcon"] = "fa-shield-alt";
}

@section HeadBlock {

}

    <div class="row">
        <div class="col-xl-12">
            <div id="panel-1" class="panel">
                <div class="panel-container show">
                    <div class="panel-content">
                        <form id="PostForm">
                            <div class="form-group">
                                <div class="row">
                                    <div class="col-12">
                                        @Html.LabelFor(m => m.GroupName)
                                        @Html.DevExtreme().TextBoxFor(m => m.GroupName).Width("100%").Placeholder("enter profile descriptions here ....").ID("txtDescriptions")
                                    </div>
                                </div>
                            </div>
                            <div class="form-group">
                                @(Html.DevExtreme().Button().Text("Submit").Height(35)
                                .Width("100%").UseSubmitBehavior(true)
                                .Type(ButtonType.Normal).StylingMode(ButtonStylingMode.Outlined)
                                .ID("button"))
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
    <div class="col-xl-12">
        <div id="panel-1" class="panel">
            <div class="panel-container show">
                <div class="panel-content">
                    @(Html.DevExtreme().DataGrid().ID("usgrid").ShowColumnLines(false).ShowRowLines(true).RowAlternationEnabled(true).ShowBorders(true).SearchPanel(s => s.Visible(true).HighlightSearchText(true).HighlightSearchText(true).Width(500))
                        .DataSource(ds => ds.Mvc().Controller("Monitors").Key("Id").LoadAction("GetProfiles").DeleteAction("DeleteProfiles").UpdateAction("EditProfiles"))
                        .Columns(c =>
                        {
                            c.Add().DataField("Name").VisibleIndex(2).Width("70%").Caption("Profile Description").SortIndex(0).SortOrder(SortOrder.Asc);
                        }).Editing(ed =>
                        {
                            ed.AllowDeleting(true);
                            ed.AllowUpdating(true);
                            ed.Mode(GridEditMode.Row);
                        }).Paging(p => p.Enabled(true).PageSize(15)).Width("100%").Pager(pg => pg.ShowInfo(true).ShowPageSizeSelector(true).ShowNavigationButtons(true)))
                </div>
            </div>
        </div>
    </div>
</div>

<div id="loader"></div>
<script type="text/javascript">
     $(function () {
         $("#PostForm").on('submit', function (e) {
             $('#loader').show();
             e.preventDefault();

             setTimeout(() => {
                 var dataToPost = $(this).serialize();

                 $.post('@Url.Action("Profiles", "Monitors")', dataToPost)

                     .done(function (response, status, jqxhr) {

                         if (response.mstatus === "success") {
                              DevExpress.ui.notify({
                                     message: "New Profile Descriptions submitted successfully",
                                     type: "success",
                                     displayTime: 6000,
                                     height: 55,
                                     position: "top"
                              });
                         } else {
                             DevExpress.ui.notify({
                                     message: response.mstatus,
                                     type: "error",
                                     displayTime: 6000,
                                     height: 55,
                                     position: "top"
                             });
                         }


                         $("#txtDescriptions").dxTextBox("instance").option('value', '');

                         reloadData();

                         $('#loader').hide();
                     })
                     .fail(function (response, status, error) {
                         DevExpress.ui.notify({
                                     message: response.mstatus,
                                     type: "error",
                                     displayTime: 6000,
                                     height: 55,
                                     position: "top"
                             });
                         e.preventDefault();
                         $('#loader').hide();
                     });

             });
         });
     });

     function reloadData() {
         $("#usgrid").dxDataGrid("getDataSource").reload();
     }


    function refreshGrid(data) {
         $("#usgrid").dxDataGrid("instance").refresh();
     }
</script>




